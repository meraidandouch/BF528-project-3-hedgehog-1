SAMPLES = ["SRR1177966", "SRR1177969", "SRR1177970", "SRR1177993", "SRR1177994", "SRR1177995", "SRR1177998", "SRR1178001", "SRR1178003"]

rule all:
	input:
		expand("{sample}", sample=SAMPLES)

rule run_fastqc:
	input:
		expand("samples/{sample}_{end}.fastq.gz", sample=SAMPLES, end=[1,2])
	output:
		expand("fastqc_results/{sample}_{end}_fastqc.html", sample=SAMPLES, end=[1,2])
	shell:
		"fastqc {input} -o fastqc_results"

# This rule for testing and debugging purposes - not ultimately used in the project
rule run_star_single:
	input:
		read1="samples/SRR1177969_1.fastq.gz",
		read2="samples/SRR1177969_2.fastq.gz"
	output:
		"star_output/SRR1177969Aligned.sortedByCoord.out.bam"
	shell:
		"STAR --readFilesIn {input.read1} {input.read2} --genomeDir /project/bf528/project_3/reference/rn4_STAR --readFilesCommand zcat --outSAMtype BAM SortedByCoordinate --outFileNamePrefix star_output/SRR1177969"

# This rule not ultimately used in the project - switched over to a standard .sh file to run star
rule run_star_1:
	input:
		read1=expand("samples/{sample}_1.fastq.gz", sample=SAMPLES),
		read2=expand("samples/{sample}_2.fastq.gz", sample=SAMPLES)
	output:
		expand("star_output/{sample}Aligned.out.bam", sample=SAMPLES)
	run:
		for line in shell("STAR --readFilesIn {SAMPLES}_1.fastq.gz {SAMPLES}_2.fastq.gz --genomeDir /project/bf528/project_3/reference/rn4_STAR --readFilesCommand zcat --outSAMtype BAM SortedByCoordinate --outFilterType BySJout --outFilterMultimapNmax 20 --alignSJoverhangMin 8 --alignSJDBoverhangMin 1 --outFilterMismatchNmax 999 --outFilterMismatchNoverReadLmax 0.04 --alignIntronMin 20 --alignIntronMax 1000000 --alignMatesGapMax 1000000 --outFileNamePrefix star_output/{SAMPLES}", iterable = True): shell(line)
